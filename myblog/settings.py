"""
Django settings for myblog project.

Generated by 'django-admin startproject' using Django 4.2.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""
# command to run this project with certificate and get social login
# python3 manage.py runserver_plus --cert-file cert.crt
#Added comment

from pathlib import Path
# this code avoids the import error for force_str
import django
from django.utils.encoding import force_str
django.utils.encoding.force_text = force_str

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-@y$+d)6_^^qm+swz=r3(=o*53f@6uaxbhay4av5jec_thmaowl'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True
DEBUG404 = True

ALLOWED_HOSTS = ['snehadomain.org','127.0.0.1','localhost']


# Application definition

INSTALLED_APPS = [
    'whitenoise.runserver_nostatic',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django.contrib.sites',
    # all auth apps
    'allauth',
    'allauth.account',
    'allauth.socialaccount',
    'allauth.socialaccount.providers.google',
    #AWS S3
    'storages',
    # for social app authentication
    'social_django',
    # for secure HTTPS along with pyOpenSSL,wrekzeug,django-extensions(needs to be added here.)
    'django_extensions',

    # My apps
    'blog',
    'photos',
]
CORS_ORIGIN_ALLOW_ALL = True

SITE_ID = 1

MIDDLEWARE = [
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'whitenoise.middleware.WhiteNoiseMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    #middleware for social app
    'social_django.middleware.SocialAuthExceptionMiddleware',
]

ROOT_URLCONF = 'myblog.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',

                'social_django.context_processors.backends',
                'social_django.context_processors.login_redirect',
            ],
        },
    },
]

AUTHENTICATION_BACKENDS = ['django.contrib.auth.backends.ModelBackend',
                           'allauth.account.auth_backends.AuthenticationBackend',

                           'social_core.backends.facebook.FacebookOAuth2',
                           'social_core.backends.twitter.TwitterOAuth',
                            'social_core.backends.google.GoogleOAuth2'
                           ]

WSGI_APPLICATION = 'myblog.wsgi.application'


# Database
# https://docs.djangoproject.com/en/4.2/ref/settings/#databases
'''
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}
'''
DATABASES = {
    'default': {
    'ENGINE' : 'djongo',
    'CLIENT': {
            "host": "mongodb://localhost:27017",
            "name":"myblog",
            # "authMechanism":"SCRAM-SHA-1"
        }
}
}


AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.2/howto/static-files/

STATIC_URL = '/static/'
MEDIA_URL = '/images/'

# Below setting will define the path where the static files need to be stored.
STATICFILES_DIRS = [
    BASE_DIR / 'photos/static',
    BASE_DIR / 'blog/static'
]

# Below setting tells the app on which location the user uploaded files will be stored.
MEDIA_ROOT = BASE_DIR / 'photos/static/images'
# The following command bundles up all the static files when we are deploying into production
STATIC_ROOT = BASE_DIR / 'staticfiles'

# Default primary key field type
# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

LOGIN_REDIRECT_URL = 'dashboard'
LOGIN_URL = 'login'
LOGOUT_URL = 'logout'
# Privacy policy : https://www.freeprivacypolicy.com/live/2b7694eb-5b84-4a5b-9c81-7268a43f65ce

SOCIAL_AUTH_FACEBOOK_KEY = '114830721565475'
SOCIAL_AUTH_FACEBOOK_SECRET = '7b6adf81ddfb7334920459501470b31d'

SOCIAL_AUTH_GOOGLE_OAUTH2_KEY = '99985418539-im62uh6s0eml4feql2ora807duh4msa2.apps.googleusercontent.com'
SOCIAL_AUTH_GOOGLE_OAUTH2_SECRET = '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'


# s3 bucket storage settings
AWS_QUERYSTRING_AUTH = False
DEFAULT_FILE_STORAGE = 'storages.backends.s3boto3.S3Boto3Storage'
# # AWS IAM user creds
AWS_ACCESS_KEY_ID = 'AKIAZQCDOPAGKKH7YQHL'
AWS_SECRET_ACCESS_KEY = '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'
# # The bucket name to which above user has access to.
AWS_STORAGE_BUCKET_NAME = 'photosharesneha'